name: Build and push Docker image_test

on:
  workflow_dispatch:
  push:
    branches: [master]
    tags :
      - 'v*'
  pull_request:
    branches: [master]
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: 'docker.io'
  # github.repository as <account>/<repo>
  IMAGE_NAME: dev/fshop
  LABEL: chenbb352
  TAG: latest
jobs:
  build:
    runs-on: ubuntu-latest #再ubuntu环境下运行
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
          cache-dependency-path: 'pom.xml' # optional
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: |
          mvn -B clean package --file pom.xml
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{env.IMAGE_NAME}}
      - name: echo
        run: echo $GITHUB_REF_NAME

      - name: Docker Login
        run: |
          docker login -u chenqihui352@outlook.com -p Dockerhub19-2102

#      - name: docker build
#        run: |
#          docker build -t yunli-admin:latest

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for 默认分支main
            type=raw,value=latest,enable={{is_default_branch}}
            # tag event
            type=ref,enable=true,priority=600,prefix=,suffix=,event=tag
          registry: docker.io
          output: metadata
      # 推送
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
#          tags:
          tags: chenbb/fshop:latest
#          tags: peanutsplash/${{github.ref_name}}
#          labels: ${{ steps.meta.outputs.labels }}
          labels: ${{ env.LABEL}}
#          tags: ${{ env.TAG}}



##

